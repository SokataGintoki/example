
//Заполните новый массив (result) числами из старого (arr). Количество элементов в массиве можно получить как
// arr.length, а к элементам обращаемся все так же: arr[0], arr[1] и тд.

// function firstTask() {
//     const arr = [3, 5, 8, 16, 20, 23, 50];
//     const result = [];
//     ...................................................................
//     return result;
// }

function firstTask() {
    const arr = [3, 5, 8, 16, 20, 23, 50]; // Массив, нужно заполнить новый массив числами этого массива
    const result = [];                     // Новый массив, должен получиться такой же массив, как выше
 
    for (let i = 0; i < arr.length; i++) { // создаем переменную i, которая будет порядковым индексом у массива
        result[i] = arr[i];                // условие, порядковый индекс меньше чем длина массива
    }                                       

    console.log(result);
    return result;
}

firstTask();



// function secondTask() {
//    const data = [5, 10, 'Shopping', 20, 'Homework'];
//    ....................................
//    return data;
 //Измените данный массив так, чтобы все числа были увеличены в 2 раза, а если попадается строка строка - то 
//к ней было добавлено " - done". Для определения типа данных используйте typeof();

function secondTask() {
    const data = [5, 10, 'Shopping', 20, 'Homework']; // Массив данный задачей

    for (let i = 0; i < data.length; i++) {          // создаем переменную, обозначающую индекс массива
        if (typeof(data[i]) === 'number') {          // если проверка на тип данных 'число' верна
            data[i] = data[i] * 2;                   // то выполняем условие задачи, увеличиваем число в 2 раза
        } else if (typeof(data[i]) === 'string') {   // иначе если проверка на тип данных 'строка' верна
            data[i] = `${data[i]} - done`;           // выполняем условие задачи, добавляем к строке - done
        }
    }

    console.log(data);                               // вывод на экран 
    return data;
}

secondTask();



// function thirdTask() {
//     const data = [5, 10, 'Shopping', 20, 'Homework'];
//     const result = [];
//     ...............................................
//     return result;
// }
// Разверните массив data наоборот при помощи цикла и запишите данные в массив result.
// Должно получиться ['Homework', 20, 'Shopping', 10, 5];


function thirdTask() {
    const data = [5, 10, 'Shopping', 20, 'Homework']; // Массив данный задачей
    const result = [];                                // Массив, который будет на выходе

    for (let i = 0; i < data.length; i++) {           // добавляем переменную i, индекс массива
        result[i] = data[data.length - i - 1];        // длина массива=5, но последний элемент имеет индекс 4
    }                                                 // т.к. индекс идёт начиная с 0, поэтому в выражении -1

    console.log(result);
    return result;
}

thirdTask();


// Задача на формирование фигуры
// Это одна из классических задач в программировании на формирование самых разных фигур при помощи кода. Вы 
// спросите, а зачем это вообще нужно? Ответов несколько:
// - Существуют реальные задачи, когда вы кодом строите геометрию, символы и другие нужные вещи. Вспомните 
//  простые электронные табло на улицах, например
//  Это хорошо прокачивает логику и разминает мозг
//  Позволяет запомнить нюансы работы языка
//  Сейчас вам необходимо написать код, который при помощи звездочек (*) в консоли нарисует вот такую фигуру:
//      *
//     ***
//    *****
//   *******
//  *********
// ***********

// const lines = 5;
// let result = '';


const lines = 5;                           // переменная, данная задачей, количнество линий
let result = '';

for (let i = 0; i <= lines; i++) {
    for (let j = 0; j < lines - i; j++) {
        result += " ";
    }
    for (let j = 0; j < 2 * i + 1; j++) {
        result += "*";
    }
    result += "\n";
}

console.log(result)

